runtime: nodejs12

instance_class: F1

service: staging

handlers:
  - url: /static/js/(.*)
    static_files: build/static/js/\1
    upload: build/static/js/(.*)
  - url: /static/css/(.*)
    static_files: build/static/css/\1
    upload: build/static/css/(.*)
  - url: /static/media/(.*)
    static_files: build/static/media/\1
    upload: build/static/media/(.*)
  - url: /(.*\.(json|ico))$
    static_files: build/\1
    upload: build/.*\.(json|ico)$
  - url: /
    static_files: build/index.html
    upload: build/index.html
  
  - url: /(.*\.(json|ico|js|png|jpg|svg))$
    static_files: build/\1
    upload: build/.*\.(json|ico|js|png|jpg|svg)$

  - url: /.*?/(.*\.(json|ico|js|png|jpg|svg))$
    static_files: build/\1
    upload: build/.*?/(.*\.(json|ico|js|png|jpg|svg))$

  - url: .*
    static_files: build/index.html
    upload: build/index.html
  - url: /.*
    static_files: build/index.html
    upload: build/index.html

automatic_scaling:
  max_instances: 1 #between 0 and 2147483647, where zero disables the setting
  min_instances: 0 #Specify a value from 0 to 1000. You can set the parameter to the value 0 to allow scaling to 0 instances to lower costs when no requests are being served
  max_idle_instances: 1 #1 to 1000, or automatic. The default value is automatic
  min_idle_instances: 0
  # Used with target_throughput_utilization to specify when a new instance is started due to concurrent requests.
  # When the number of concurrent requests reaches a value equal to max_concurrent_requests times target_throughput_utilization, the scheduler tries to start a new instance.
  target_throughput_utilization: 0.6 #0.5 to 0.95. The default is 0.6
  max_concurrent_requests: 15 #Default: 10, Maximum: 80