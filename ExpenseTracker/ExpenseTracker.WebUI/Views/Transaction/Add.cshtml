@model ExpenseTracker.WebUI.Models.Transaction.AddModel
@{
    Layout = "~/Views/Shared/_AuthorizedLayout.cshtml";
    ViewBag.Title = Resources.Title_Transaction_Add;
}

@section customstyles{
    <style>
        #radioBtn .notActive {
            color: #3276b1;
            background-color: #fff;
        }

        .cusradiobtn {
            cursor: pointer;
        }
    </style>

    @*TODO: try to include this stylesheet right here on the row below. Right now it is moved to alllllll the way to the top "BaseLayout"*@
    @*<link rel="stylesheet" href="~/Content/adminlte/plugins/select2/css/select2.min.css">*@
    <!-- Toastr -->
    @*<link rel="stylesheet" href="../../plugins/toastr/toastr.min.css">*@
}

@section content_header{
    <div class="col-sm-6">
        <h1 class="m-0 text-dark">@Resources.Title_Transaction_Add</h1>
    </div><!-- /.col -->
    <div class="col-sm-6">
        <ol class="breadcrumb float-sm-right">
            <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home")">@Resources.Nav_Home</a></li>
            <li class="breadcrumb-item active">@Resources.Menu_NewTransaction</li>
        </ol>
    </div>
    <!-- /.col -->
}

<div class="row">
    <div class="col-md-12 mx-auto">
        <div class="row">
            <div class="col-sm-12">
                @Html.DropDownListFor(model => model.TemplateId, Model.TemplateListForView, Resources.Transaction_Add_Label_SelectTemplate, htmlAttributes: new { @class = "form-control select2" })
            </div>
        </div>

        @using (Html.BeginForm("Add", "Transaction", FormMethod.Post, new { @class = "needs-validation" }))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="card">
                <div class="card-header">
                    <div class="input-group">
                        <div id="radioBtn" class="btn-group">
                            <a class="btn btn-primary btn-sm active cusradiobtn" data-toggle="IsIncome" data-title="false">&nbsp; @Resources.Transaction_Edit_Label_Expense &nbsp;</a>
                            <a class="btn btn-primary btn-sm notActive cusradiobtn" data-toggle="IsIncome" data-title="true">&nbsp; @Resources.Transaction_Edit_Label_Income &nbsp;</a>
                        </div>
                        @Html.HiddenFor(m => m.IsIncome)
                    </div>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Amount, Resources.Transaction_Edit_Label_Amount)
                            <div class="input-group mb-3">
                                @Html.EditorFor(model => model.Amount, "{0}", new { htmlAttributes = new { @class = "form-control" } })
                                <div class="input-group-append">
                                    <span class="input-group-text" id="CurrentlySpentAmount">
                                        <span class="badge bg-info">
                                        </span>
                                    </span>
                                </div>
                            </div>
                            @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.CategoryId, Resources.Transaction_Edit_Label_Category)
                            @Html.DropDownListFor(model => model.CategoryId, Model.CategoryList, htmlAttributes: new { @class = "form-control select2" })
                            @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Date, Resources.Transaction_Edit_Label_Date)
                            <div class="input-group">
                                <div class="input-group-append">
                                    <div class="input-group-text"><i class="fa fa-calendar-alt"></i></div>
                                </div>
                                @Html.EditorFor(model => model.Date, "{0:yyyy-MM-dd}", new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.AccountId, Resources.Transaction_Edit_Label_Account)
                            @Html.DropDownListFor(model => model.AccountId, Model.AccountList, htmlAttributes: new { @class = "form-control select2" })
                            @Html.ValidationMessageFor(model => model.AccountId, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.Description, Resources.Transaction_Edit_Label_Description)
                            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <!-- /.card-body -->
                <div class="card-footer">
                    <div class="row">
                        <div class="col-md-6">
                            <button class="btn btn-primary" type="submit">@Resources.Generic_Save_Button</button>
                        </div>
                        <div class="col-md-6">
                            @Html.TextBox("TemplateName", "", new { @class = "form-control", placeholder = Resources.Transaction_Template_Template_Name })
                            <button class="btn btn-primary" type="button" onclick="saveAsTemplate(this)">@Resources.Transaction_Add_Button_SaveAsTemplate</button>
                        </div>
                    </div>
                </div>
            </div>
            <!-- /.card -->
        }
    </div>
</div>

<hr class="mb-4">

@Html.Partial("_List", Model.TransactionSummaries)

@section scripts {
    <!-- Select2 -->
    <script src="~/Content/adminlte/plugins/select2/js/select2.full.min.js"></script>
    <!-- Toastr -->
    <script src="~/Content/adminlte/plugins/toastr/toastr.min.js"></script>

    <script>
    var templateList;
    var categoryStatusList;

        $(function () {
            $('#radioBtn a').on('click', function () {
                var sel = $(this).data('title');
                var tog = $(this).data('toggle');
                $('#' + tog).prop('value', sel);

                $('a[data-toggle="' + tog + '"]').not('[data-title="' + sel + '"]').removeClass('active').addClass('notActive');
                $('a[data-toggle="' + tog + '"][data-title="' + sel + '"]').removeClass('notActive').addClass('active');
            });

            $('.select2').select2();

            var model = @Html.Raw(Json.Encode(Model));
            templateList = model.TemplateList;
            categoryStatusList = model.CategoryStatusList;

            $('#TemplateId').on('change', function () {
                var templateId = $('#TemplateId').val();
                if (templateId == undefined || templateId == null || templateId == '') {
                    $('#Amount').val(0);
                    $('#CategoryId').val('').trigger('change');
                    $('#Description').val('');
                    $('#AccountId').val('').trigger('change');
                }
                else {
                    for (i = 0; i < templateList.length; i++) {
                        if (templateList[i].TemplateId == templateId) {
                            $('#Amount').val(templateList[i].Amount);
                            $('#Description').val(templateList[i].Description);
                            $('#AccountId').val(templateList[i].AccountId).trigger('change');
                            $('#CategoryId').val(templateList[i].CategoryId).trigger('change');
                            break;
                        }
                    }
                }
            });

            $('#CategoryId').on('change', function () {
                var spentText = '@(Resources.Transaction_Add_Label_AlreadySpent)<br/>';

                var categoryId = $('#CategoryId').val();
                if (categoryId != undefined && categoryId != null & categoryId != '') {
                    var found = false;
                    for (i = 0; i < categoryStatusList.length; i++) {
                        if (categoryStatusList[i].CategoryId == categoryId) {
                            var spentAmt = categoryStatusList[i].SpentAmount;
                            spentText = spentText + spentAmt;
                            found = true;
                            break;
                        }
                    }

                    if (!found) {
                        spentText = spentText + '0';
                    }
                }

                $('#CurrentlySpentAmount>.badge').html(spentText);
            });

            $('#CategoryId').change();
        });

        $(document).on("click", ".delete-transaction-button", function () {
            var transactionId = $(this).data('id');
            $(".modal-footer #TransactionId").val(transactionId);
        });

    function saveAsTemplate(e) {
        if ($('#TemplateName').val() == undefined || $('#TemplateName').val() == null || $('#TemplateName').val() == '') {
            toastr.error('@Resources.Transaction_Template_Error_NameIsEmpty');
            return;
        }

        var postUrl = '@Url.Action("Create", "TransactionTemplate")';
        var postData = {
            TemplateName: $('#TemplateName').val(),
            Amount: $('#Amount').val(),
            CategoryId: $('#CategoryId').val(),
            Description: $('#Description').val(),
            SourceAccountId: $('#AccountId').val()
        };

        $.ajax(
            {
                type: "POST",
                url: postUrl,
                data: JSON.stringify(postData),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (msg) {
                    if (msg == 'success') {
                        toastr.success('@Resources.Transaction_Template_Creation_Successful');
                    }
                    else {
                        toastr.error('@Resources.Transaction_Template_Creation_Error');
                    }
                },
                error: function (msg) {
                    toastr.error('@Resources.Transaction_Template_Creation_Error');
                }
            });
        }
    </script>
}
